version: "3.7"

services:
  web:
    build:
      context: ..
      dockerfile: docker/web/Dockerfile
    working_dir: /usr/src/app/src
    command: gunicorn core.wsgi:application --reload --bind 0.0.0.0:8000
    volumes:
      - ../src:/usr/src/app/src
      - static_volume:/usr/src/static
      - media_volume:/usr/src/media
      - cache_volume:/usr/src/cache
      - log_volume:/usr/src/log
    expose:
      - 8000
    env_file:
      - web/.env.dev.web
    depends_on:
      - db
      - azurite

  worker:
    build:
      context: ..
      dockerfile: docker/worker/Dockerfile
    command: python orchestrator.py
    env_file:
      - worker/.env.dev.worker
    depends_on:
      - azurite

  worker-web:
    build:
      context: ..
      dockerfile: docker/worker-web/Dockerfile
    working_dir: /usr/src/app/src
    command: python manage.py run_web_jobs
    volumes:
      - ../src:/usr/src/app/src
      - static_volume:/usr/src/static
      - media_volume:/usr/src/media
      - cache_volume:/usr/src/cache
      - log_volume:/usr/src/log
    env_file:
      - web/.env.dev.web
    depends_on:
      - db
      - azurite
      - redis

  db:
    image: postgres
    restart: always
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file:
      - db/.env.dev.db

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/usr/src/static
      - media_volume:/usr/src/media
    ports:
      - 8000:80
    depends_on:
      - web

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    hostname: azurite
    volumes:
      - azurite_volume:/data
    ports:
      - 20000:10000
      - 20001:10001

  redis:
    image: redis:alpine
    ports:
      - 26379:6379
    volumes:
      - redis_volume:/data

volumes:
  postgresql_data:
  static_volume:
  media_volume:
  azurite_volume:
  cache_volume:
  log_volume:
  redis_volume:
